name: CI

on: 
  push:
  workflow_dispatch:

jobs:
  build:
    name :Build App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
      - uses: actions/checkout@v3 
        with:
          fetch-depth: 0
          
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle    
   
      - name: Build Gradlew
        run: |
          chmod +x gradlew
          ./gradlew build sonar -Dsonar.token=${{ secrets.SONAR_TOKEN }} 
          ls -lah $GITHUB_WORKSPACE/build/libs/

      - name: Archive artifact java app
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: java-app
          path: build/libs/testing-web-0.0.1-SNAPSHOT.jar
          
      - name: Generate Jacoco Coverage Report
        run: |
          chmod +x gradlew
          ./gradlew jacocoTestReport
          
      - name: SonarCloud Analysis
        run: |
         chmod +x gradlew
         ./gradlew build sonar -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_QUALITYGATE: 'Cobertura'
          wait-for-quality-gate: true          
        with:
          scanMetadataReportFile: build/sonar/report-task.txt   
      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: CP raiz Jar 
        run: |
          cp $GITHUB_WORKSPACE/build/libs/*.jar .
          chmod 777 *.jar
          ls -lt  
      
      - name: Docker Build
        run: | 
          docker build --tag dockeruser701/useruoh:latest .
          docker images

      - name: Docker Push
        run: |           
          docker push matias1980/dockerjar

          deploy: 
          runs-on: self-hosted 
          needs: build
          steps: 

          - uses: actions/checkout@v3
          
          - name: Deploy to Minikube
            run: |
              kubectl apply -f deployment.yml 
